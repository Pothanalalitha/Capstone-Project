spring.application.name=Billing-Service

# Server port
server.port=8084


# Datasource (MySQL)
spring.datasource.url=jdbc:mysql://localhost:3306/billing_db
spring.datasource.username=root
spring.datasource.password=Jonny@2003

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# Eureka Client
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

# Kafka
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=billing-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*




# Zipkin

management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans

# Resilience4j
resilience4j.circuitbreaker.instances.appointmentService.sliding-window-size=10
resilience4j.circuitbreaker.instances.appointmentService.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.appointmentService.wait-duration-in-open-state=5000

# Prometheus and actuator
management.endpoints.web.exposure.include=health,info,prometheus
management.metrics.export.prometheus.enabled=true

# Logging levels
logging.level.root=INFO
logging.level.com.example.appointment=DEBUG



