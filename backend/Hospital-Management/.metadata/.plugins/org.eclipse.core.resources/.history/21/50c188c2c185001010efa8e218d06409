package com.example.wipro.lalitha.entites;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;

@Entity
public class MedicalRecord {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    private String description;
    private String issue;
    private String doctorName;

    private LocalDateTime treatedAt;
    private LocalDate revisitDate;

    @ManyToOne
    @JoinColumn(name = "patient_id")
    private Patient patient;

    @OneToMany(mappedBy = "medicalRecord", cascade = CascadeType.ALL, orphanRemoval = true)
    private List<Medicine> medicines;


	public Long getId() {
		return id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	public String getIssue() {
		return issue;
	}

	public void setIssue(String issue) {
		this.issue = issue;
	}

	public String getDoctorName() {
		return doctorName;
	}

	public void setDoctorName(String doctorName) {
		this.doctorName = doctorName;
	}

	public LocalDateTime getTreatedAt() {
		return treatedAt;
	}

	public void setTreatedAt(LocalDateTime treatedAt) {
		this.treatedAt = treatedAt;
	}

	public LocalDate getRevisitDate() {
		return revisitDate;
	}

	public void setRevisitDate(LocalDate revisitDate) {
		this.revisitDate = revisitDate;
	}

	public Patient getPatient() {
		return patient;
	}

	public void setPatient(Patient patient) {
		this.patient = patient;
	}

	public List<Medicine> getMedicines() {
		return medicines;
	}

	public void setMedicines(List<Medicine> medicines) {
		this.medicines = medicines;
	}

	public MedicalRecord() {
		super();
	}

	public MedicalRecord(String description, String issue, String doctorName, LocalDateTime treatedAt,
			LocalDate revisitDate, Patient patient, List<Medicine> medicines) {
		super();
		this.description = description;
		this.issue = issue;
		this.doctorName = doctorName;
		this.treatedAt = treatedAt;
		this.revisitDate = revisitDate;
		this.patient = patient;
		this.medicines = medicines;
	}
    
    
    
}
