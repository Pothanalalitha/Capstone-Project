spring.application.name=Patient-Service
# Server Configuration
server.port=8082


# Config Server (adjust URL as per your setup)
spring.cloud.config.uri=http://localhost:8888

# Eureka Client Configuration
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.instance.prefer-ip-address=true

# MySQL Database Configurations
spring.datasource.url=jdbc:mysql://localhost:3306/patient_db
spring.datasource.username=root
spring.datasource.password=Jonny@2003
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA & Hibernate Settings
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# Logging Levels (adjust log level as per your needs)
logging.level.org.springframework=INFO
logging.level.com.example=DEBUG

# Management / Prometheus
management.endpoints.web.exposure.include=health,info,prometheus
management.metrics.export.prometheus.enabled=true
management.endpoint.prometheus.enabled=true

# Zipkin Tracing
spring.zipkin.base-url=http://localhost:9411/
spring.sleuth.sampler.probability=1.0

# Resilience4j Circuit Breaker Configuration
resilience4j.circuitbreaker.instances.patientService.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.patientService.slidingWindowSize=20
resilience4j.circuitbreaker.instances.patientService.failureRateThreshold=50
resilience4j.circuitbreaker.instances.patientService.waitDurationInOpenState=10000
# MongoDB Configuration
spring.data.mongodb.uri=mongodb://localhost:27017/medical_records_db


